"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[226],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(t),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return t?n.createElement(m,a(a({ref:r},u),{},{components:t})):n.createElement(m,a({ref:r},u))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1613:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={sidebar_position:4},s="Records",l={unversionedId:"architecture/records",id:"architecture/records",isDocsHomePage:!1,title:"Records",description:"Records represent permanent alterations to a given World. They have the following fields:",source:"@site/docs/architecture/records.md",sourceDirName:"architecture",slug:"/architecture/records",permalink:"/architecture/records",editUrl:"https://github.com/WorldQL/docs.worldql.com/tree/trunk/docs/architecture/records.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Worlds",permalink:"/architecture/worlds"},next:{title:"Entities",permalink:"/architecture/entities"}},u=[],p={toc:u};function d(e){var r=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"records"},"Records"),(0,i.kt)("p",null,"Records represent permanent alterations to a given ",(0,i.kt)("a",{parentName:"p",href:"./worlds"},"World"),". They have the following fields:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"UUID: A string representing the unique ID of this record."),(0,i.kt)("li",{parentName:"ol"},"Position: A 3D vector representing the position of this Record. This is optional and if omitted can be used to create Records that can be looked up by UUID directly."),(0,i.kt)("li",{parentName:"ol"},"World name: A string representing what World this record is located in."),(0,i.kt)("li",{parentName:"ol"},"Data: A string payload. Can be used however the developer wishes."),(0,i.kt)("li",{parentName:"ol"},"Flex: A byte array payload. Can be used however the developer wishes, using a Flexbuffer is recommended.")),(0,i.kt)("p",null,"Records can be retrieved using the ",(0,i.kt)("a",{parentName:"p",href:"./instructions#recordread"},"RecordRead")," instruction and created using ",(0,i.kt)("a",{parentName:"p",href:"./instructions#recordcreate"},"RecordCreate"),"."))}d.isMDXComponent=!0}}]);